<?xml version="1.0" encoding="utf-8"?>
<odoo noupdate="1">
        <record id="action_move_studio_field" model="ir.actions.server">
            <field name="name">Move Studio Field</field>
            <field name="model_id" ref="model_studio_migration"/>
            <field name="binding_model_id" ref="model_studio_migration"/>
            <field name="binding_view_types">list</field>
            <field name="activity_user_type">generic</field>
            <field name="state">code</field>
            <field name="code">
# Available variables:
#  - env: Odoo Environment on which the action is triggered
#  - model: Odoo Model of the record on which the action is triggered; is a void recordset
#  - record: record on which the action is triggered; may be void
#  - records: recordset of all records on which the action is triggered in multi-mode; may be void
#  - time, datetime, dateutil, timezone: useful Python libraries
#  - float_compare: Odoo function to compare floats based on specific precisions
#  - log: log(message, level='info'): logging function to record debug information in ir.logging table
#  - UserError: Warning Exception to use with raise
# To return an action, assign: action = {...}
# - use fields_to_migrate dictionary to specify old_field to new field computation like field_to_migrate = fields_to_migrate = {
#  "x_studio_field": "field",
#}

studio_migration = env["studio.migration"]

fields_to_migrate = {
  "": "",
}

for record in records:
  studio_migration.move_fields(record, fields_to_migrate)
            </field>
        </record>
</odoo>
